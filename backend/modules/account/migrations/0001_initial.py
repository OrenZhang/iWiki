# Generated by Django 3.2.9 on 2021-11-25 19:42

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "uid",
                    models.CharField(
                        max_length=24,
                        primary_key=True,
                        serialize=False,
                        verbose_name="用户ID",
                    ),
                ),
                (
                    "username",
                    models.CharField(max_length=24, unique=True, verbose_name="用户名"),
                ),
                ("is_staff", models.BooleanField(default=False, verbose_name="访问后台")),
                ("is_active", models.BooleanField(default=True, verbose_name="激活状态")),
                (
                    "date_joined",
                    models.DateTimeField(auto_now_add=True, verbose_name="注册时间"),
                ),
                ("avatar", models.URLField(blank=True, null=True, verbose_name="头像")),
                ("phone", models.CharField(max_length=11, verbose_name="联系电话")),
                ("is_deleted", models.BooleanField(default=False, verbose_name="软删除")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "成员",
                "verbose_name_plural": "成员",
                "db_table": "auth_user",
            },
        ),
    ]
